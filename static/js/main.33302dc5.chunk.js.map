{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","error","label","placeholder","required","onChange","onBlur","useState","Math","random","toFixed","slice","id","touched","setTouched","hasError","htmlFor","type","classNames","event","target","NewMovie","onAdd","titles","formData","setFormData","errors","setErrors","handleInputChange","prevData","onSubmit","e","preventDefault","Object","keys","some","trim","test","newMovie","prevErrors","disabled","values","App","moviesFromServer","setMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.33302dc5.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  placeholder?: string,\n  required?: boolean,\n  onChange?: (newValue: string) => void,\n  onBlur?: () => void,\n  error: boolean;\n};\n\nfunction getRandomDigits() {\n  return Math.random()\n    .toFixed(16)\n    .slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  error,\n  label = name,\n  placeholder = `Enter ${label}`,\n  required = false,\n  onChange = () => {},\n  onBlur = () => {},\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  const [touched, setTouched] = useState(false);\n  const hasError = touched && required && !value;\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError || error,\n          })}\n          placeholder={placeholder}\n          value={value}\n          onChange={(event) => onChange(event.target.value)}\n          onBlur={() => {\n            setTouched(true);\n            onBlur();\n          }}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\ninterface NewMovieProps {\n  onAdd: (formData: Movie) => void;\n}\n\nexport const NewMovie: React.FC<NewMovieProps> = ({ onAdd }) => {\n  const [formData, setFormData] = useState({\n    titles: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  });\n\n  const [errors, setErrors] = useState({\n    titles: false,\n    description: false,\n    imgUrl: false,\n    imdbUrl: false,\n    imdbId: false,\n  });\n\n  const handleBlur = (name: keyof typeof formData) => {\n    if (name === 'titles' || name === 'imgUrl' || name === 'imdbUrl'\n    || name === 'imdbId') {\n      setFormData((prevData) => ({\n        ...prevData,\n        [name]: prevData[name].trim(),\n      }));\n\n      setErrors((prevErrors) => ({\n        ...prevErrors,\n        [name]: formData[name].trim() === '' || /^\\s+$/.test(formData[name]),\n      }));\n    }\n  };\n\n  const handleInputChange = (name: keyof typeof formData, value: string) => {\n    setFormData((prevData) => ({\n      ...prevData,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    const hasErrors = Object.keys(errors).some((name) => {\n      if (name === 'titles' || name === 'imgUrl' || name === 'imdbUrl'\n      || name === 'imdbId') {\n        return formData[name].trim() === '' || /^\\s+$/.test(formData[name]);\n      }\n\n      return false;\n    });\n\n    if (hasErrors) {\n      return;\n    }\n\n    const newMovie: Movie = {\n      title: formData.titles,\n      description: formData.description,\n      imgUrl: formData.imgUrl,\n      imdbUrl: formData.imdbUrl,\n      imdbId: formData.imdbId,\n    };\n\n    onAdd(newMovie);\n\n    setFormData({\n      titles: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n\n    setErrors({\n      titles: false,\n      description: false,\n      imgUrl: false,\n      imdbUrl: false,\n      imdbId: false,\n    });\n  };\n\n  return (\n    <form className=\"NewMovie\" onSubmit={handleSubmit}>\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"titles\"\n        label=\"Title\"\n        value={formData.titles}\n        onChange={(value) => handleInputChange('titles', value)}\n        onBlur={() => handleBlur('titles')}\n        error={errors.titles}\n        data-cy=\"movie-title\"\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={formData.description}\n        onChange={(value) => handleInputChange('description', value)}\n        error={errors.description}\n        required\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={formData.imgUrl}\n        onChange={(value) => handleInputChange('imgUrl', value)}\n        error={errors.imgUrl}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={formData.imdbUrl}\n        onChange={(value) => handleInputChange('imdbUrl', value)}\n        error={errors.imdbUrl}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={formData.imdbId}\n        onChange={(value) => handleInputChange('imdbId', value)}\n        error={errors.imdbId}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={Object.values(errors).some(error => error)}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>(moviesFromServer);\n\n  const handleAddMovie = (newMovie: Movie) => {\n    setMovies([...movies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={handleAddMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}